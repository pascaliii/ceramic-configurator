/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 Model_Bowl_2023_09_06.gltf -o Transformed_Model_Bowl_2023_09_06 
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import{useLoader} from '@react-three/fiber'
import * as THREE from 'three'
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'
import clays from '../data/clays'

export function Bowl({ clay, glaze }) {
  const { nodes, materials } = useLoader(
    GLTFLoader,
    './models/Model_Bowl_2023_09_06.gltf'
  )
  var textureLoader = new THREE.TextureLoader()

 const findSelectedMaterial = () =>{
    const material = clays.find((item) => item.value === clay)
    return material
  }

  const createNewMaterial = (material) => {
    let baseColor
    let height
    let normal
    let ao
    let roughness

    if(material){
      baseColor = textureLoader.load(material.baseColor)
      height = textureLoader.load(material.height)
      normal = textureLoader.load(material.normal)
      ao = textureLoader.load(material.ao)
      roughness = textureLoader.load(material.roughness)

      baseColor.repeat.set(1, 1)
      height.repeat.set(1, 1)
      normal.repeat.set(1, 1)
      ao.repeat.set(1, 1)

      baseColor.wrapS = baseColor.wrapT = THREE.RepeatWrapping
      height.wrapS = height.wrapT = THREE.RepeatWrapping
      normal.wrapS = normal.wrapT = THREE.RepeatWrapping
      ao.wrapS = normal.wrapT = THREE.RepeatWrapping

      materials.Material_Top.map = baseColor
      materials.Material_Top.normalMap = normal
      materials.Material_Top.displacementMap = height
      materials.Material_Top.displacementScale = 0.00001
      materials.Material_Top.aoMap = ao
    }
  }

  useEffect((clay) => {
    const material = findSelectedMaterial()
      createNewMaterial(material)
      materials.Material_Top.needsUpdate
  }, [clay])

  return (
    <group dispose={null}>
      <mesh
        geometry={nodes.Cup001.geometry}
        material={materials.Material_Top}
      />
      <mesh
        geometry={nodes.Cup001_1.geometry}
        material={materials.Material_Top}
        // material={materials.Material_Middle}
      />
      <mesh
        geometry={nodes.Cup001_2.geometry}
        material={materials.Material_Top}
        // material={materials.Material_Base}
      />
      <mesh
        geometry={nodes.Cup001_3.geometry}
        material={materials.Material_Top}
        // material={materials.Material_Bottom}
      />
      <mesh
        geometry={nodes.Cup001_4.geometry}
        material={materials.Material_Top}
        // material={materials.Material_Inner}
      />
    </group>
  )
}

useLoader.preload(GLTFLoader, './models/Model_Bowl_2023_09_06.gltf' /* extensions */)
